@page "/admin/books"
@page "/admin"
@inherits OwningComponentBase<IBookstoreProjectRepository>

<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Category</th>
            <th>Price</th>
            <td />
        </tr>
    </thead>
    <tbody>
        @if (BookData?.Count() > 0)
        {
            @foreach (Book b in BookData)
            {
        <tr>
            <td>@b.BookId</td>
            <td>@b.Title</td>
            <td>@b.Category</td>
            <td>@b.Price.ToString("C", CultureInfo.CreateSpecificCulture("en-US"))</td>
            <td>
                <NavLink class="btn btn-info btn-sm"
                         href="@GetDetailsUrl(b.BookId)">
                    Details
                </NavLink>
            </td>
            <td>
                <NavLink class="btn btn-warning btn-sm"
                         href="@GetEditUrl(b.BookId)">
                    Edit
                </NavLink>
            </td>
            <td>
                <NavLink class="btn btn-danger btn-sm"
                         href="@GetDeleteUrl(b.BookId)">
                    Delete
                </NavLink>
            </td>
        </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Products</td>
            </tr>
        }
    </tbody>
</table>
<NavLink class="btn btn-primary" href="/admin/books/create">Create</NavLink>

@code {
    public IBookstoreProjectRepository repo => Service;

    public IEnumerable<Book> BookData { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        BookData = await repo.Books.ToListAsync();
    }
    public string GetDetailsUrl(long id) => $"/admin/books/details/{id}";
    public string GetEditUrl(long id) => $"/admin/books/edit/{id}";
    public string GetDeleteUrl(long id) => $"/admin/books/confirm/{id}";

}